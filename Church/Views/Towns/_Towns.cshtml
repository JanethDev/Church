@model StaticPagedList<dtoTowns>
<div id="TownsList">
    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <tr class="tableStyleHeader">
                <th>
                    @Html.ActionLink("Municipio", "Index", new { Sorting_Order = ViewBag.SortingName, Name = ViewBag.Name, StateID = ViewBag.StateID, Date = ViewBag.Date })
                </th>
                <th>
                    @Html.ActionLink("Estado", "Index", new { Sorting_Order = ViewBag.SortingName, Name = ViewBag.Name, StateID = ViewBag.StateID, Date = ViewBag.Date })
                </th>
                <th>
                    @Html.ActionLink("Fecha de creación", "Index", new { Sorting_Order = ViewBag.SortingDate, Name = ViewBag.Name, StateID = ViewBag.StateID, Date = ViewBag.Date })
                </th>
                <th></th>
            </tr>

            @if (Model.Count == 0)
            {
                <tr>
                    <td colspan="9"><label>No se encontraron resultados</label></td>
                </tr>
            }

            @foreach (var item in Model)
            {
        <tr class="tableStylerow">
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @item.CreatedDate.ToString("dd/MM/yyyy")
            </td>
            <td align="center">
                @Html.ActionLink("Ver Registro", "Details", new { id = item.TownID }, new { @class = "" })
            </td>
        </tr>
            }
            <tr class="tableStyleHeader">
                <td colspan="9">
                    <div id="pagedList" class="pagedList" data-otf-target="#TownsList">
                        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, Sorting_Order = ViewBag.Sorting_Order, Name = ViewBag.Name, StateID = ViewBag.StateID, }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(PagedListRenderOptions.ClassicPlusFirstAndLast, new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "TownsList" }))
                    </div>
                </td>
            </tr>
        </table>
    </div>
</div>