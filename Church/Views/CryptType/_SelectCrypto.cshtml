@model tblCryptsSections
@{ 
    var vPrices = ViewBag.CryptPrices as List<tblCryptPrices>;
    var vCryptTypes = ViewBag.CryptPositionTypes as List<tblCryptPositionTypes>;
}

<div class="row">
    <div class="col-md-12">
        <h3>Nicho seleccionado: @Model.ClassificationName, Codigo: @Model.Code</h3>
        <h4>Seleccione la cripta para configurarla</h4>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        @if (Model != null)
        {
            <div class="table-responsive">
                <table>
                    @{ 
                        int iIndexAbecedario = HtmlHelperExtensions.lstAbecedario.IndexOf(Model.StartLetter);
                    }
                    @for (int i = 1; i <= Model.Levels; i++)
                    {
                        if (i == 1)
                        {
                            <tr>
                                <td></td>
                                @for (int j = 1; j <= Model.Quantity; j++)
                                {
                                    
                                    <td align="center" valign="middle">
                                        @(j)
                                    </td>
                                }
                            </tr>
                        }

                        iIndexAbecedario = iIndexAbecedario > (HtmlHelperExtensions.lstAbecedario.Count - 1) ? 0 : iIndexAbecedario;
                        string sLetter = HtmlHelperExtensions.lstAbecedario[iIndexAbecedario];
                        int iLevel = Model.Levels - (i - 1);
                        decimal dPrice = vPrices.Where(r => r.CryptClassificationID == Model.CryptClassificationID && r.Level == iLevel).FirstOrDefault().Price;
                        <tr>
                            <td align="center" valign="middle">@(sLetter)</td>
                            @for (int j = 1; j <= Model.Quantity; j++)
                            {
                                iIndexAbecedario = iIndexAbecedario > (HtmlHelperExtensions.lstAbecedario.Count - 1) ? 0 : iIndexAbecedario;
                                sLetter = HtmlHelperExtensions.lstAbecedario[iIndexAbecedario];
                                string sPosition = sLetter + "" + j;
                                string sImageUrna = "cuadro.png";
                                var vCryptType = vCryptTypes.Where(r => r.CryptKey == sPosition).FirstOrDefault();
                                string sTypeName = vCryptType != null ? vCryptType.TypeName : "Sin asignar";
                                var vType = vCryptType != null ? (int)vCryptType.Type : 0;
                                <td align="center" valign="middle">
                                    <span id="span@(sPosition)" style="font-size: 12px;font-weight: bolder;">@sTypeName</span><br />
                                    <img src="@Url.Content("~/Content/Images/" + sImageUrna)" style="width: 50px;margin:10px; cursor: pointer;" data-type="@vType" data-position="@sPosition" class="select-urna" />
                                    <p>@sPosition</p>
                                </td>
                            }

                        </tr>
                        iIndexAbecedario++;
                    }
                </table>
            </div>
        }
    </div>
</div>