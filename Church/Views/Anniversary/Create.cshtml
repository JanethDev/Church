@model tblAnniversary

@{
    ViewBag.Title = "Nuevo aniversario luctuoso";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    input, select, textarea {
        max-width: 100%;
    }
</style>

@using (Html.BeginForm("Create", "Anniversary", FormMethod.Post, new { id = "AnniversaryCreateForm" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
<div class="card">
    <div class="card-header card-header-green">
        <h2>
            @ViewBag.Title
        </h2>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-4 col-sm-6 col-xs-12">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })*
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
            <div class="col-md-4 col-sm-6 col-xs-12">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label" })*
                @Html.TextBoxFor(model => model.Date, new { @class = "form-control datepicker", @Value = DateTime.Now.ToShortDateString() })
                @Html.ValidationMessageFor(model => model.Date)
            </div>
            <div class="col-md-4 col-sm-6 col-xs-12">
                @Html.LabelFor(model => model.Hour, htmlAttributes: new { @class = "control-label" })*
                @Html.TextBoxFor(model => model.Hour, new { @class = "form-control time" })
                @Html.ValidationMessageFor(model => model.Hour)
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">*
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>
    </div>

    @Html.HiddenFor(model => model.Active)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.CreatedBy)
    @Html.HiddenFor(model => model.UpdatedDate)
    @Html.HiddenFor(model => model.UpdatedBy)
    @Html.HiddenFor(model => model.DeletedDate)
    @Html.HiddenFor(model => model.DeletedDate)

    <div class="row" style="padding-top:15px;">
        <div class="col-md-2 col-sm-2 col-xs-6">
            @Html.ActionLink("Volver", "Index", null, new { @class = "btn btn-primary", @style = "width:100%;" })
        </div>
        <div class="offset-md-8 col-md-2 col-sm-2 col-xs-6">
            <input type="submit" value="Guardar" class="btn btn-success" style="float:right;width:100%;" />
        </div>
    </div>
</div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script src="~/Scripts/SUMMERNOTE/summernote-bs4.min.js"></script>
        <link href="~/Scripts/SUMMERNOTE/summernote-bs4.min.css" rel="stylesheet" />
        <script src="~/Scripts/SUMMERNOTE/lang/summernote-es-ES.js"></script>
        <script src="~/Scripts/ui.datepicker-es-MX.js"></script>
        <script src="~/Scripts/jquery.mask.js"></script>
        <script type="text/javascript">

            $(function () {
                $('.time').mask('00:00');
                $('form').each(function () {
                    if ($(this).data('validator'))
                        $(this).data('validator').settings.ignore = ".note-editor *,:hidden";
                });
                $(".time").change(function () {
                    var arr = $(this).val().split(":");
                    if (parseInt(arr[0]) > 23) {
                        $(this).val("23:59");
                    } else if (arr.length == 1) {
                        $(this).val($(this).val() + ":00");
                    }
                    if (parseInt(arr[0]) < 10) {
                        if (arr.length == 2)
                            $(this).val("0" + parseInt(arr[0]) + ":" + arr[1]);
                        else
                            $(this).val("0" + parseInt(arr[0]) + ":00");
                    }
                })
                $('#Description').summernote({
                    lang: 'es-ES',
                    height: 500,
                    toolbar: [
                        // [groupName, [list of button]]
                        ['style', ['bold', 'italic', 'underline', 'clear']],
                        ['fontsize', ['fontsize']],
                        ['color', ['color']],
                        ['para', ['ul', 'ol', 'paragraph']],
                    ],
                    fontname: 'Century Gothic',
                    callbacks: {
                        onChange: function (contents, $editable) {
                            if (contents != "<p><br></p>") {
                                $(this).val(contents);
                            } else {
                                $(this).val('');
                            }
                        }
                    }
                });
                $.datepicker.setDefaults($.datepicker.regional['es-MX']);
                $(".datepicker").datepicker();
            });
        </script>
    }
