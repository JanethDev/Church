@model tblCustomers

@{
    ViewBag.Title = "Editar cliente";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("Edit", "Customers", FormMethod.Post, new { id = "CustomerEditForm", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="card">
        <div class="card-header card-header-green">
            <h2>
                @ViewBag.Title
            </h2>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-4 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.CustomerID, htmlAttributes: new { @class = "control-label " })
                    @Html.TextBoxFor(model => model.CustomerID, new { @readonly = true, @class = "form-control" })
                </div>
                <div class="col-md-4 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })*
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
                <div class="col-md-4 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.PSurname, htmlAttributes: new { @class = "control-label" })*
                    @Html.TextBoxFor(model => model.PSurname, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PSurname)
                </div>
            </div>
            <div class="row">
                <div class="col-md-4 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.MSurname, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.MSurname, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MSurname)
                </div>
                <div class="col-md-4 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.StateID, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.StateID, new SelectList(ViewBag.States, "StateID", "Name", "Estado"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StateID)
                </div>
                <div class="col-md-4 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.TownID, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.TownID, new SelectList(ViewBag.Towns, "TownID", "Name", "Ciudad"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TownID)
                </div>
            </div>
            <div class="row">
                <div class="col-md-4 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })*
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
                <div class="col-md-4 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Phone)
                </div>
                <div class="col-md-4 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.CelPhone, htmlAttributes: new { @class = "control-label" })*
                    @Html.TextBoxFor(model => model.CelPhone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CelPhone)
                </div>
            </div>
            <div class="row">
                <div class="col-md-4 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.BusinessName, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.BusinessName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BusinessName)
                </div>
                <div class="col-md-4 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.RFCCURP, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.RFCCURP, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RFCCURP)
                </div>
                <div class="col-md-4 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.DateOfBirth, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker" })
                    @Html.ValidationMessageFor(model => model.DateOfBirth)
                </div>
            </div>
            <div class="row">
                <div class="col-md-4 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.CityOfBirth, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.CityOfBirth, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CityOfBirth)
                </div>
                <div class="col-md-4 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.CivilStatusID, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("CivilStatusID", new SelectList(ViewBag.CivilStatus, "CivilStatusID", "Name", "Estado Civil"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CivilStatusID)
                </div>
                <div class="col-md-4 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.Occupation, htmlAttributes: new { @class = "control-label" })*
                    @Html.TextBoxFor(model => model.Occupation, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Occupation)
                </div>
            </div>
            <div class="row">
                <div class="col-md-4 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.CFDI, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBox("CFDIFile", Model.CFDIFile, new { @class = "form-control", @Type = "file" })
                    @Html.ValidationMessageFor(model => model.CFDIFile)
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <hr />
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 col-sm-6 col-xs-12" style="padding-bottom:5px;">
                    <div class="label-design">
                        <span class="label-detail-header label-designInside">
                            @Html.DisplayNameFor(model => model.CreatedBy):
                        </span>
                        <span class="label-detail label-design">
                            @ViewBag.CreatedBy
                        </span>
                    </div>
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12" style="padding-bottom:5px;">
                    <div class="label-design">
                        <span class="label-detail-header label-designInside">
                            @Html.DisplayNameFor(model => model.CreatedDate):
                        </span>
                        <span class="label-detail label-design">
                            @Model.CreatedDate
                        </span>
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="col-md-6 col-sm-6 col-xs-12" style="padding-bottom:5px;">
                    <div class="label-design">
                        <span class="label-detail-header label-designInside">
                            @Html.DisplayNameFor(model => model.UpdatedBy):
                        </span>
                        <span class="label-detail label-design">
                            @ViewBag.UpdatedBy
                        </span>
                    </div>
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12" style="padding-bottom:5px;">
                    <div class="label-design">
                        <span class="label-detail-header label-designInside">
                            @Html.DisplayNameFor(model => model.UpdatedDate):
                        </span>
                        <span class="label-detail label-design">
                            @Model.UpdatedDate
                        </span>
                    </div>
                </div>
            </div>
        </div>

        @Html.HiddenFor(model => model.CustomerID)
        @Html.HiddenFor(model => model.Active)
        @Html.HiddenFor(model => model.CreatedDate)
        @Html.HiddenFor(model => model.CreatedBy)
        @Html.HiddenFor(model => model.UpdatedDate)
        @Html.HiddenFor(model => model.UpdatedBy)
        @Html.HiddenFor(model => model.DeletedDate)
        @Html.HiddenFor(model => model.DeletedDate)

        <div class="row" style="padding-top:15px;">
            <div class="col-md-2 col-sm-2 col-xs-6">
                @Html.ActionLink("Volver", "Index", null, new { @class = "btn btn-primary", @style = "width:100%;" })
            </div>
            <div class="offset-md-8 col-md-2 col-sm-2 col-xs-6">
                <input type="submit" value="Guardar" class="btn btn-success" style="float:right;width:100%;" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
      $("#StateID").change(function () {
        $("#TownID").html('');
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetByStateID", "Towns")',
            dataType: 'json',
            data: { StateID: $("#StateID").val() },
            success: function (data) {
                $.each(data, function (i, item) {
                    $("#TownID").append('<option value="' + item.TownID + '">' + item.Name + '</option>');
                });
            },
            error: function (ex) {
                alert($("#patient_error").data('error') + ex);
            }
        });
      })
        $(function () {
            $('.datepicker').datepicker({
                dateFormat: 'yy-mm-dd',
                autoclose: true
            });
        });
    </script>
}
