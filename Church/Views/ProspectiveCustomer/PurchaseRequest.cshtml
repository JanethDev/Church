@model tblPurchasesRequests
@{
    ViewBag.Title = "Nueva solicitud de compra";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var vCryptPosition = ViewBag.CryptPosition;
    var vCryptSectionId = ViewBag.CryptSectionId;
    var vPrice = ViewBag.Price;
    var vPaymentMethod = ViewBag.PaymentMethod;
    var vEnganche = ViewBag.Enganche;
    var vMensualidades = ViewBag.Mensualidades;
    var vCryptSection = ViewBag.CryptSection as tblCryptsSections;
}
<div class="card">
    <div class="card-header card-header-green">
        <h2>
            @ViewBag.Title
        </h2>
    </div>
    <div class="card-body">
        @using (Html.BeginForm("PurchaseRequest", "ProspectiveCustomer", FormMethod.Post, new { id = "PurchaseRequestCreateForm", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            string sDisplayNewCustomer = "";
            string sDisplaySearchCustomer = "";
            if (!String.IsNullOrEmpty(Model.Customer))
            {
                sDisplayNewCustomer = "display:none";
            }
            else
            {
                sDisplaySearchCustomer = "display:none";
            }
            @Html.HiddenFor(model => model.PaymentMethod)
            @Html.HiddenFor(model => model.CryptKey)
            @Html.HiddenFor(model => model.Level)
            @Html.HiddenFor(model => model.CryptSectionID)
            @Html.HiddenFor(model => model.Enganche)
            @Html.HiddenFor(model => model.Mensualidades)
            @Html.HiddenFor(model => model.FirstPaymentDate)
            @Html.HiddenFor(model => model.LastPaymentDate)
            @Html.HiddenFor(model => model.CryptPrice)
            @Html.HiddenFor(model => model.OriginalPrice)
            @Html.HiddenFor(model => model.CryptType)
            @Html.HiddenFor(model => model.CryptPosition)
            @Html.HiddenFor(model => model.Nicho)
            @Html.HiddenFor(model => model.Quantity)
            @Html.HiddenFor(model => model.DiscountID)
            @Html.HiddenFor(model => model.ContractID)
            <input type="hidden" name="Date" id="Date" value="@Model.Date" />
            <input type="hidden" name="CreatedDate" id="CreatedDate" value="@Model.CreatedDate" />
            <input type="hidden" name="UpdatedDate" id="UpdatedDate" value="@Model.UpdatedDate" />
            <input type="hidden" name="CreatedBy" id="CreatedBy" value="@Model.CreatedBy" />
            <input type="hidden" name="UpdatedBy" id="UpdatedBy" value="@Model.UpdatedBy" />
            <input type="hidden" name="Active" id="Active" value="True" />
            <input type="hidden" name="Quotation" id="Quotation" value="False" />
            <input type="hidden" name="Prospective" id="Prospective" value="@Model.Prospective" />
            <div class="row">
                <div class="col-md-4 col-sm-6 col-xs-12">
                    <table class="table table-bordered" style="background-color: white">
                        <tr><td colspan="3" style="text-align:center;">Fecha</td></tr>
                        <tr>
                            <td>@Model.Date.Day</td>
                            <td>@Model.Date.Month</td>
                            <td>@Model.Date.Year</td>
                        </tr>
                    </table>
                </div>
                <div class="offset-2 col-md-6 col-sm-6 col-xs-12">
                    <table class="table table-bordered" style="background-color: white">
                        <tr>
                            <td style="">SOLICITUD</td>
                            <td>@Model.PurchasesRequestID</td>
                            <td style="">VENDEDOR</td>
                            <td>@Model.CreatedBy</td>
                        </tr>
                        <tr>
                            <td style="">CONTRATO</td>
                            <td>@Model.ContractID</td>
                            <td style="">PROMOTOR</td>
                            <td>
                                @Html.DropDownList("CommissionAgentID", new SelectList(ViewBag.CommissionAgents, "CommissionAgentID", "FullName", "Comisionista"), "Seleccione", new { @class = "form-control" })
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 col-sm-6 col-xs-12">
                    <table class="table table-bordered" style="background-color: white;margin-bottom: 0px;">
                        <tr><td colspan="3" style="text-align:center"><strong>DATOS DEL SOLICITANTE</strong></td></tr>
                        <tr>
                            <td colspan="3">
                                <button type="button" id="EditNameCustomer" class="btn btn-success">EDITAR NOMBRE</button>
                                <button type="button" id="NewCustomer" class="btn btn-success" style="margin-left:5px;@sDisplayNewCustomer">NUEVO CLIENTE</button>
                                <button style="margin-left:5px" type="button" id="SearchCustomer" class="btn btn-info">CLIENTE EXISTENTE</button>
                            </td>
                        </tr>
                        <tr class="tr-search-customer" style="@sDisplaySearchCustomer">
                            <td>BUSCAR CLIENTE</td>
                            <td colspan="2">
                                <input type="text" class="form-control" id="Customer" name="Customer" value="@Model.Customer" />
                                <input type="hidden" name="CustomerID" id="CustomerID" value="@Model.CustomerID" />
                                <input type="hidden" name="UserID" id="UserID" value="@Model.UserID" />
                            </td>
                        </tr>
                        <tr class="tr-new-customer" style="@sDisplayNewCustomer">
                            <td>APELLIDO PATERNO*</td>
                            <td>APELLIDO MATERNO*</td>
                            <td>NOMBRES*</td>
                        </tr>
                        <tr class="tr-new-customer" style="@sDisplayNewCustomer">
                            <td><input type="text" class="form-control control-customer-new" id="PSurname" name="PSurname" value="@Model.PSurname" /></td>
                            <td><input type="text" class="form-control control-customer-new" id="MSurname" name="MSurname" value="@Model.MSurname" /></td>
                            <td><input type="text" class="form-control control-customer-new" id="Name" name="Name" value="@Model.Name" /></td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 col-sm-6 col-xs-12">
                    <table class="table table-bordered" style="background-color: white;margin-bottom: 0px;">
                        <tr><td colspan="3" style="text-align:center"><strong>DOMICILIO PARTICULAR</strong></td></tr>
                        <tr>
                            <td style="width:60%">CALLE, AV., BLDV. CALZ.</td>
                            <td>NUMERO</td>
                            <td>INTERIOR</td>
                        </tr>
                        <tr>
                            <td style="width:60%"><input type="text" class="form-control" style="max-width: 100%" id="Address" name="Address" value="@Model.Address" /></td>
                            <td><input type="text" class="form-control" id="AddressNumber" name="AddressNumber" value="@Model.AddressNumber" /></td>
                            <td><input type="text" class="form-control" id="AdressInteriorNumber" name="AdressInteriorNumber" value="@Model.AdressInteriorNumber" /></td>
                        </tr>
                        <tr>
                            <td colspan="2">COLONIA</td>
                            <td>CODIGO POSTAL</td>
                        </tr>
                        <tr>
                            <td colspan="2"><input type="text" class="form-control" style="max-width: 100%" id="Neighborhood" name="Neighborhood" value="@Model.Neighborhood" /></td>
                            <td><input type="text" class="form-control" id="ZipCode" name="ZipCode" value="@Model.ZipCode" /></td>
                        </tr>
                    </table>
                    <table class="table table-bordered" style="background-color: white;margin-bottom: 0px;">
                        <tr>
                            <td>ESTADO</td>
                            <td>DELEGACIÓN</td>
                            <td>CIUDAD</td>
                        </tr>
                        <tr>
                            <td>@Html.DropDownList("StateID", new SelectList(ViewBag.States, "StateID", "Name", "Estado"), new { @class = "form-control" })</td>
                            <td><input type="text" class="form-control" id="Delegation" name="Delegation" value="@Model.Delegation" /></td>
                            <td>@Html.DropDownList("TownID", new SelectList(ViewBag.Towns, "TownID", "Name", "Ciudad"), new { @class = "form-control" })</td>
                        </tr>
                    </table>
                    <table class="table table-bordered" style="background-color: white;margin-bottom: 0px;">
                        <tr>
                            <td>TELEFONO PARTICULAR*</td>
                            <td>CORREO ELECTRONICO*</td>
                        </tr>
                        <tr>
                            <td><input type="text" class="form-control phone control-customer" id="CelPhone" name="CelPhone" value="@Model.CelPhone" /></td>
                            <td>
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control control-customer" })
                                @Html.ValidationMessageFor(model => model.Email)
                            </td>
                        </tr>
                    </table>
                    <table class="table table-bordered" style="background-color: white">
                        <tr>
                            <td style="width:25%">Razón Social</td>
                            <td><input type="text" class="form-control" id="BusinessName" name="BusinessName" value="@Model.BusinessName" /></td>
                        </tr>
                        <tr>
                            <td style="width:25%">R.F.C</td>
                            <td><input type="text" class="form-control" id="RFCCURP" name="RFCCURP" value="@Model.RFCCURP" /></td>
                        </tr>
                        <tr>
                            <td style="width:25%">FECHA DE NACIMIENTO</td>
                            <td><input readonly="readonly" type="text" class="form-control datepicker" id="DateOfBirth" name="DateOfBirth" value="@(Model.DateOfBirth!=null?Model.DateOfBirth.Value.ToShortDateString():"")" /></td>
                        </tr>
                        <tr>
                            <td style="width:25%">LUGAR DE NACIMIENTO</td>
                            <td><input type="text" class="form-control" id="CityOfBirth" name="CityOfBirth" value="@Model.CityOfBirth" /></td>
                        </tr>
                        <tr>
                            <td style="width:25%">ESTADO CIVIL</td>
                            <td>@Html.DropDownList("CivilStatusID", new SelectList(ViewBag.CivilStatus, "CivilStatusID", "Name", "Estado Civil"), new { @class = "form-control" })</td>
                        </tr>
                        <tr>
                            <td style="width:25%">OCUPACION</td>
                            <td><input type="text" class="form-control" id="Occupation" name="Occupation" value="@Model.Occupation" /></td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 col-sm-6 col-xs-12">
                    <table class="table table-bordered" style="background-color: white;margin-bottom: 0px;">
                        <tr><td colspan="3" style="text-align:center"><strong>DATOS DE LA EMPRESA DONDE PRESTA SUS SERVICIO</strong></td></tr>
                        <tr>
                            <td>NOMBRE DE LA COMPAÑIA</td>
                            <td style="width:70%"><input type="text" class="form-control" id="Company" name="Company" value="@Model.Company" /></td>
                        </tr>
                    </table>
                    <table class="table table-bordered" style="background-color: white;margin-bottom: 0px;">
                        <tr>
                            <td style="width:70%">DOMICILIO</td>
                            <td>TELEFONO</td>
                            <td><input type="text" class="form-control phone" id="PhoneCompany" name="PhoneCompany" value="@Model.PhoneCompany" /></td>
                        </tr>
                        <tr>
                            <td style="width:70%"><input type="text" class="form-control" id="AddressCompany" name="AddressCompany" value="@Model.AddressCompany" /></td>
                            <td>EXT.</td>
                            <td><input type="text" class="form-control" id="ExtPhoneCompany" name="ExtPhoneCompany" value="@Model.ExtPhoneCompany" /></td>
                        </tr>
                    </table>
                    <table class="table table-bordered" style="background-color: white">
                        <tr>
                            <td>ESTADO</td>
                            <td>DELEGACION</td>
                            <td>CIUDAD</td>
                        </tr>
                        <tr>
                            <td>@Html.DropDownList("StateAddressCompanyID", new SelectList(ViewBag.StateAddressCompany, "StateID", "Name", "Estado"), new { @class = "form-control" })</td>
                            <td><input type="text" class="form-control" id="DelegationAddressCompany" name="DelegationAddressCompany" value="@Model.DelegationAddressCompany" /></td>
                            <td>@Html.DropDownList("TownAddressCompanyID", new SelectList(ViewBag.TownAddressCompany, "TownID", "Name", "Ciudad"), new { @class = "form-control" })</td>
                        </tr>
                        <tr>
                            <td colspan="2">INGRESO PROMEDIO MENSUAL (incluye su conyuge)</td>
                            <td>
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text" id="basic-addon1">$</span>
                                    </div>
                                    <input type="text" class="form-control" id="Income" name="Income" @*value="@Model.Income"*@ aria-describedby="basic-addon1" />
                                </div>
                            </td>
                        </tr>
                    </table>
                    <table class="table table-bordered" style="background-color: white;margin-bottom: 0px;">
                        <tr><td colspan="4" style="text-align:center"><strong>REFERENCIAS</strong></td></tr>
                        <tr>
                            <td>1*</td>
                            <td><input type="text" class="form-control control-reference" id="ReferenceCustomer1" name="ReferenceCustomer1" value="@Model.ReferenceCustomer1" /></td>
                            <td>TEL.*</td>
                            <td><input type="text" class="form-control control-reference phone" id="ReferenceCustomerPhone1" name="ReferenceCustomerPhone1" value="@Model.ReferenceCustomerPhone1" /></td>
                        </tr>
                        <tr>
                            <td>2</td>
                            <td><input type="text" class="form-control control-reference" id="ReferenceCustomer2" name="ReferenceCustomer2" value="@Model.ReferenceCustomer2" /></td>
                            <td>TEL.</td>
                            <td><input type="text" class="form-control control-reference phone" id="ReferenceCustomerPhone2" name="ReferenceCustomerPhone2" value="@Model.ReferenceCustomerPhone2" /></td>
                        </tr>
                    </table>
                    <table class="table table-bordered" id="tableBeneficiary" style="background-color: white;margin-bottom: 0px;">
                        <tr><td colspan="4" style="text-align:center"><strong>BENEFICIARIOS*</strong></td></tr>
                        <tr>
                            <td>Nombres</td>
                            <td>Apellidos</td>
                            <td>Fecha nac.</td>
                            <td>Teléfono</td>
                            <td>Parentesco</td>
                            <td><button class="btn btn-success" id="btnAddBeneficiary" type="button">+</button></td>
                        </tr>
                        @if (ViewBag.BeneficiaryCustomers == null || ViewBag.BeneficiaryCustomers.Count == 0)
                        {
                            <tr class="tr tr-beneficiary">
                                <td><input type="text" class="form-control control-beneficiary" name="BeneficiaryName" value="" /></td>
                                <td><input type="text" class="form-control control-beneficiary" name="BeneficiarySurnames" value="" /></td>
                                <td><input type="text" class="form-control datepicker control-beneficiary" name="BeneficiaryBirthdate" value="" readonly="readonly" /></td>
                                <td><input type="text" class="form-control control-beneficiary phone" name="BeneficiaryCelPhone" value="" /></td>
                                <td><input type="text" class="form-control control-beneficiary" name="BeneficiaryRelationship" value="" /><input type="hidden" name="BeneficiaryCustomerID" value="0" /></td>
                                <td><button class="btn btn-danger btn-remove-beneficiary" type="button">-</button></td>
                            </tr>
                        }
                        else
                        {
                            List<tblBeneficiaryCustomers> ListBeneficiaryCustomer = ViewBag.BeneficiaryCustomers as List<tblBeneficiaryCustomers>;
                            foreach (var item in ListBeneficiaryCustomer)
                            {
                                <tr class="tr tr-beneficiary">
                                    <td><input type="text" class="form-control control-beneficiary" name="BeneficiaryName" value="@item.Name" /></td>
                                    <td><input type="text" class="form-control control-beneficiary" name="BeneficiarySurnames" value="@item.Surnames" /></td>
                                    <td><input type="text" class="form-control datepicker control-beneficiary" name="BeneficiaryBirthdate" value="@item.Birthdate.ToShortDateString()" /></td>
                                    <td><input type="text" class="form-control control-beneficiary phone" name="BeneficiaryCelPhone" value="@item.CelPhone" /></td>
                                    <td><input type="text" class="form-control control-beneficiary" name="BeneficiaryRelationship" value="@item.Relationship" /><input type="hidden" name="BeneficiaryCustomerID" value="@item.BeneficiaryCustomerID" /></td>
                                    <td><button class="btn btn-danger btn-remove-beneficiary" type="button">-</button></td>
                                </tr>
                            }
                        }
                    </table>

                    <table class="table table-bordered" style="background-color: white;margin-bottom: 0px;">
                        <tr><td colspan="4" style="text-align:center"><strong>CONDICIONES ECONOMICAS DE LA OPERACION</strong></td></tr>
                        <tr>
                            <td>PLAN DE VENTA</td>
                            <td>CLAVE DE LA CRIPTA</td>
                            <td>NIVEL</td>
                            <td>AREA</td>
                            <td>ZONA</td>
                        </tr>
                        <tr>
                            <td>@Model.PaymentMethodName</td>
                            <td>@Model.Nicho</td>
                            <td>@Model.Level</td>
                            <td>@vCryptSection.ClassificationName</td>
                            <td>ZONA A</td>
                        </tr>
                    </table>
                    <table class="table table-bordered" style="background-color: white;margin-bottom: 0px;">
                        <tr>
                            <td>IMPORTE TOTAL</td>
                            <td>DESC. APLICADO</td>
                            <td>PAGO INICIAL</td>
                            <td>SALDO</td>
                        </tr>
                        @{
                            var vSaldo = Model.CryptPrice - Model.Enganche;
                        }
                        <tr>
                            <td>@Model.OriginalPrice.ToString("C2") MXN.</td>
                            <td>
                                @if (Model.PaymentMethodName == "Contado" || Model.PaymentMethodName == "Uso inmediato 50%")
                                {
                                    @((Model.OriginalPrice-Model.CryptPrice).ToString("C2") + " MXN. " + Model.DiscountDescription)
                                }
                                else
                                {
                                    @((Model.OriginalPrice-Model.CryptPrice).ToString("C2") + " MXN. ")
                                }
                            </td>
                            <td>@Model.Enganche.ToString("C2") MXN.</td>
                            <td>@vSaldo.ToString("C2") MXN.</td>
                        </tr>
                        @if (Model.PaymentMethod != PaymentMethods.Contado)
                        {
                            int iMeses = Model.PaymentMethod == PaymentMethods.Meses12 || Model.PaymentMethod == PaymentMethods.UsoInmediato ? 11 : 23;
                            <tr>
                                <td colspan="3">EL SALDO SERA LIQUIDADO EN @iMeses ABONOS DE: @Model.Mensualidades.ToString("C2") MXN. C/U, @Model.DiscountDescription</td>
                            </tr>
                        }
                    </table>
                    @if (Model.PaymentMethod != PaymentMethods.Contado)
                    {
                        <table class="table table-bordered" style="background-color: white;margin-bottom: 0px;">
                            <tr>
                                <td style="border: none;"></td>
                                <td style="border: none;"></td>
                                <td>DIA</td>
                                <td>MES</td>
                                <td>AÑO</td>
                                <td style="border: none;"></td>
                                <td style="border: none;"></td>
                                <td>DIA</td>
                                <td>MES</td>
                                <td>AÑO</td>
                            </tr>
                            <tr>
                                <td colspan="2">SIENDO EL PRIMERO DE ELLOS EN</td>
                                <td>@Model.FirstPaymentDate.Value.Day</td>
                                <td>@Model.FirstPaymentDate.Value.Month</td>
                                <td>@Model.FirstPaymentDate.Value.Year</td>
                                <td colspan="2">Y EL ULTIMO EN</td>
                                <td>@Model.LastPaymentDate.Value.Day</td>
                                <td>@Model.LastPaymentDate.Value.Month</td>
                                <td>@Model.LastPaymentDate.Value.Year</td>
                            </tr>
                        </table>
                    }
                    @{
                        string sDisplayAshDeposit = "display:none;";
                        string sColSpan = "2";
                        if (Model.PaymentMethodName == "Contado" || Model.PaymentMethodName == "Uso inmediato 50%")
                        {
                            sDisplayAshDeposit = "";
                            sColSpan = "";
                        }
                        string sDisplayMaintenanceFee = "";
                        if (Model.Level >= 7)
                        {
                            sDisplayMaintenanceFee = "display:none;";
                            sColSpan = "";
                        }
                    }
                    <table class="table table-bordered" style="background-color: white;margin-bottom: 0px;">
                        <tr><td colspan="2" style="text-align:center"><strong>ADICIONAL</strong></td></tr>
                        <tr>
                            <td colspan="@sColSpan" style="@sDisplayMaintenanceFee width:50%">Cuota de mantenimiento anual</td>
                            <td style="@sDisplayAshDeposit width:50%">Deposito de cenizas</td>
                        </tr>
                        <tr>
                            <td colspan="@sColSpan" style="@sDisplayMaintenanceFee">
                                @{ string sCheckMaintenanceFee = Model.CheckMaintenanceFee ? "checked" : ""; }
                                <input type="checkbox" id="cbCheckMaintenanceFee" class="check-box" data-id="@Model.MaintenanceFeeID" style="width: 30px; height: 30px" @sCheckMaintenanceFee />
                                <label style="position:absolute;margin-top:4px;margin-left:15px">@Model.MaintenanceFee.ToString("C2") MXN</label>
                                <input type="hidden" name="CheckMaintenanceFee" id="CheckMaintenanceFee" value="False" />
                                <input type="hidden" name="MaintenanceFeeID" id="MaintenanceFeeID" value="0" />
                            </td>
                            <td style="@sDisplayAshDeposit">
                                @{ string sCheckFederalTax = Model.CheckFederalTax ? "checked" : ""; }
                                <input type="checkbox" id="cbCheckFederalTax" class="check-box" data-id="@Model.FederalTaxID" style="width: 30px; height: 30px; " @sCheckFederalTax />
                                <label style="position: absolute; margin-top: 4px; margin-left: 15px">@Model.FederalTax.ToString("C2") MXN</label>
                                <input type="hidden" name="CheckFederalTax" id="CheckFederalTax" value="False" />
                                <input type="hidden" name="FederalTaxID" id="FederalTaxID" value="0" />
                            </td>
                        </tr>
                    </table>
                    <table class="table table-bordered" style="background-color: white;margin-bottom: 0px;">
                        @{
                            string sCheckPaymentAmount = Model.CheckPaymentAmount != null ? "checked" : "";
                            string sCreditCardPaymentAmount = Model.CreditCardPaymentAmount != null ? "checked" : "";
                            string sCashPaymentAmountOrTransfer = Model.CashPaymentAmountOrTransfer != null ? "checked" : "";
                            string sCashDeposit = Model.CashDeposit != null ? "checked" : "";
                            string sCashPaymentAmount = Model.CashPaymentAmount != null ? "checked" : "";
                        }
                        <tr>
                            <td class="text-center align-middle" rowspan="7">FORMA DEL PAGO INICIAL*</td>
                        </tr>
                        <tr>
                            <td colspan="2"></td>
                            <td>CANTIDAD</td>
                            <td>No. DE CHEQUE</td>
                            <td>No. DE CUENTA</td>
                            <td>BANCO</td>
                            <td>Comprobante</td>
                        </tr>
                        <tr>
                            <td><input type="checkbox" id="TypePay1" class="typepay" name="TypePay" value="1" @sCheckPaymentAmount></td>
                            <td>CHEQUE </td>
                            <td>@Html.TextBoxFor(model => model.CheckPaymentAmount, htmlAttributes: new { @class = "form-control payment just-decimal typepay1" })</td>
                            <td>@Html.TextBoxFor(model => model.CheckPaymentNo, htmlAttributes: new { @class = "form-control typepay1" })</td>
                            <td>@Html.TextBoxFor(model => model.CheckPaymentAccount, htmlAttributes: new { @class = "form-control typepay1" })</td>
                            <td>@Html.TextBoxFor(model => model.CheckPaymentBank, htmlAttributes: new { @class = "form-control typepay1" })</td>
                            <td></td>
                        </tr>
                        <tr style="margin-bottom:5px">
                            <td><input type="checkbox" id="TypePay2" class="typepay" name="TypePay" value="2" @sCreditCardPaymentAmount></td>
                            <td>T. DE CREDITO/DEBITO </td>
                            <td>@Html.TextBoxFor(model => model.CreditCardPaymentAmount, htmlAttributes: new { @class = "form-control payment just-decimal typepay2" })</td>
                            <td>@Html.TextBoxFor(model => model.CreditCardPaymentNo, htmlAttributes: new { @class = "form-control typepay2" })</td>
                            <td>@Html.TextBoxFor(model => model.CreditCardPaymentAccount, htmlAttributes: new { @class = "form-control typepay2" })</td>
                            <td>@Html.TextBoxFor(model => model.CreditCardPaymentBank, htmlAttributes: new { @class = "form-control typepay2" })</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td><input type="checkbox" id="TypePay3" class="typepay" name="TypePay" value="3" @sCashPaymentAmountOrTransfer></td>
                            <td>TRANSFERENCIA</td>
                            <td>@Html.TextBoxFor(model => model.CashPaymentAmountOrTransfer, htmlAttributes: new { @class = "form-control payment just-decimal typepay3" })</td>
                            <td colspan="3"></td>
                            <td><input type="file" class="form-control typepay3" id="Ticket" name="Ticket" /></td>
                        </tr>
                        <tr>
                            <td><input type="checkbox" id="TypePay5" class="typepay" name="TypePay" value="5" @sCashDeposit></td>
                            <td>DEPOSITO EN EFECTIVO</td>
                            <td>@Html.TextBoxFor(model => model.CashDeposit, htmlAttributes: new { @class = "form-control payment just-decimal typepay5" })</td>
                            <td colspan="4"></td>
                            <td><input type="file" class="form-control typepay5" id="TicketCashDeposit" name="TicketCashDeposit" /></td>
                        </tr>
                        <tr>
                            <td><input type="checkbox" id="TypePay4" class="typepay" name="TypePay" value="4" @sCashPaymentAmount></td>
                            <td>EFECTIVO</td>
                            <td>@Html.TextBoxFor(model => model.CashPaymentAmount, htmlAttributes: new { @class = "form-control payment just-decimal typepay4" })</td>
                            <td colspan="5"></td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="row" style="padding-top:15px;">
                <div class="col-md-2 col-sm-2 col-xs-6">
                    @Html.ActionLink("Volver", "Index", null, new { @class = "btn btn-primary", @style = "width:100%;" })
                </div>
                <div class="offset-md-6 col-md-2 col-sm-2 col-xs-6">
                    <input type="button" value="Cotizar" id="btnQuotation" class="btn btn-default" style="float:right;width:100%;" />
                </div>
                @*<div class="col-md-2 col-sm-2 col-xs-6">
                        @Html.ActionLink("Contrato", "Contract", null, htmlAttributes: new { @class = "btn btn-success", @style = "width:100%;" })
                    </div>
                    <div class="col-md-2 col-sm-2 col-xs-6">
                        @Html.ActionLink("Contrato 2", "ContractCommunityCrypt", null, htmlAttributes: new { @class = "btn btn-success", @style = "width:100%;" })
                    </div>*@
                @*<div class="col-md-2 col-sm-2 col-xs-6">
                       @Html.ActionLink("Solicitud", "PDF", null, htmlAttributes: new { @class = "btn btn-success", @style = "width:100%;" })
                    </div>*@
                <div class="col-md-2 col-sm-2 col-xs-6">
                    <input type="button" value="Guardar" id="btnSave" class="btn btn-default" style="float:right;width:100%;" />
                </div>
            </div>

            <input type="hidden" id="windowid" name="windowid" value="@Guid.NewGuid().ToString()" />
            <input type="hidden" id="window_contract_id" name="window_contract_id" value="@Guid.NewGuid().ToString("N")" />
        }
    </div>
</div>
@section Scripts {
    <script src="~/Scripts/ui.datepicker-es-MX.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.min.js" defer></script>
    @Scripts.Render("~/bundles/jqueryval")
    <script>
    $(".payment").change(function () {
        EngancheCorrecto();
    })

    $(document).ready(function () {
        if ($("#CheckPaymentAmount").val() == "") {
            $(".typepay1").attr("disabled", "disabled");
        }
        if ($("#CreditCardPaymentAmount").val() == "") {
            $(".typepay2").attr("disabled", "disabled");
        }
        if ($("#CashPaymentAmountOrTransfer").val() == "") {
            $(".typepay3").attr("disabled", "disabled");
        }
        if ($("#CashDeposit").val() == "") {
            $(".typepay5").attr("disabled", "disabled");
        }
        if ($("#CashPaymentAmount").val() == "") {
            $(".typepay4").attr("disabled", "disabled");
        }
    });
    $(".typepay").click(function () {
        var nChecks = 0;
        $('.typepay:checked').each(
            function () {
                nChecks++;
                console.log("checks " +$(this).val());
            }
        );
        if (nChecks < 3) {
            $('.typepay').each(
                function () {
                    var vClass = $(this).attr("class") + $(this).attr("value");
                    if (!$(this).prop('checked')) {
                        $("." + vClass).val("").attr("disabled", "disabled");
                    } else {
                        if (nChecks == 1) {
                            switch ($(this).attr("id")) {
                                case "TypePay1":
                                    $("#CheckPaymentAmount").val($("#Enganche").val())
                                    break;
                                case "TypePay2":
                                    $("#CreditCardPaymentAmount").val($("#Enganche").val())
                                    break;
                                case "TypePay3":
                                    $("#CashPaymentAmountOrTransfer").val($("#Enganche").val())
                                    break;
                                case "TypePay4":
                                    $("#CashPaymentAmount").val($("#Enganche").val())
                                    break;
                                case "TypePay5":
                                    $("#CheckPaymentAmount").val($("#Enganche").val())
                                    break;
                            }
                        }
                        $("." + vClass).removeAttr("disabled")
                    }
                }
            );
        } else {
            $(this).prop('checked', false)
        }
    });
    $(".check-box").click(function () {
        if ($(this).prop("checked") == true) {
            $(this).parent().children().eq(2).attr("value", "True");
            $(this).parent().children().eq(3).val($(this).attr("data-id"));
        } else {
            $(this).parent().children().eq(2).attr("value", "False");
            $(this).parent().children().eq(3).val(0);
        }
    })
    @if (ViewBag.Message != null)
    {
        <text>
        AlertMessage("Se guardaron los cambios");
        </text>
    }

    $(function () {
        $.datepicker.setDefaults($.datepicker.regional['es-MX']);
        $(".datepicker").datepicker({
            changeMonth: true,
            changeYear: true,
            showButtonPanel: true,
            dateFormat: 'dd/mm/yy',
            yearRange: "-120:+0",
            maxDate: new Date(),
        });
        $('.phone').mask('(000)-0000000');
    });
    $(document).on("click", ".btn-remove-beneficiary", function () {
        $(this).parent().parent().remove();
    })
    $("#btnQuotation").click(function () {
        if ($('#CashPaymentAmount').val().length == 0 && $('#CashPaymentAmountOrTransfer').val().length == 0 && $('#CheckPaymentAmount').val().length == 0 && $('#CreditCardPaymentAmount').val().length == 0 && $('#TicketCashDeposit').val().length == 0) {
            AlertMessage("Debe de capturar al menos una forma de pago inicial.");
            return;
        }
        if ($('#CashPaymentAmountOrTransfer').val().length > 0 && $("#Ticket").val().length == 0) {
            AlertMessage("Adjunte el recibo de transferencia o deposito en efectivo.");
            return;
        }
        $.ajax({
            url: '@Url.Action("CheckIfExistCustomer", "Users")',
            dataType: "json",
            data: ({
                'Email': $("#Email").val(),
                'CustomerID': $("#CustomerID").val(),
            }),
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                console.log(data);
                if (data == 1) {
                    var errorCustomer = false;
                    if ($("#CustomerID").val() == 0) {
                        $(".control-customer-new").each(function (idx) {
                            if ($(this).val().length == 0) {
                                errorCustomer = true;
                            }
                        });
                    }
                    $(".control-customer").each(function (idx) {
                        if ($(this).val().length == 0) {
                            errorCustomer = true;
                        }
                    });

                    var error = false;

                    if (($("#TownID").val() != null && $("#TownID").val().length == 0) || $("#StateID").val().length == 0) {
                        error = true;
                    }

                    if (!error && !errorCustomer) {
                        $("#Quotation").val("True");
                        $("#PurchaseRequestCreateForm").submit();
                        checkCookie();
                        AlertMessage("Guardando...")
                    }
                    else
                        if (errorCustomer)
                            AlertMessage("Debe llenar los campos necesarios del Cliente, Nombre, correo electronico y telefono particular");
                        else if (error)
                            AlertMessage("Llene todos los campos")
                } else {
                    AlertMessage("Ya existe un cliente registrado con el mismo correo");
                }
            },
            error: function (error) {
                alert(error);
            }
        });
    });
    $("#btnSave").click(function () {
            if ($('#CashPaymentAmount').val().length == 0 && $('#CashPaymentAmountOrTransfer').val().length == 0 && $('#CheckPaymentAmount').val().length == 0 && $('#CreditCardPaymentAmount').val().length == 0 && $('#TicketCashDeposit').val().length == 0) {
                AlertMessage("Debe de capturar al menos una forma de pago inicial.");
                return;
            }
            if ($('#CashPaymentAmountOrTransfer').val().length > 0 && $("#Ticket").val().length == 0) {
                AlertMessage("Adjunte el recibo de transferencia o deposito en efectivo.");
                return;
            }
            if (!EngancheCorrecto()) {
                return;
            }
            $.ajax({
                url: '@Url.Action("CheckIfExistCustomer", "Users")',
                dataType: "json",
                data: ({
                    'Email': $("#Email").val(),
                    'CustomerID': $("#CustomerID").val(),
                }),
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    console.log(data);
                    if (data == 1) {
                        var errorBeneficiary = false;
                        var errorReference = false;
                        var errorCustomer = false;
                        $(".control-beneficiary").each(function (idx) {
                            if ($(this).val().length == 0) {
                                errorBeneficiary = true;
                            }
                        });
                        if ($(".tr").length == 0)
                            errorBeneficiary = true;
                        var emptyInputsReference = 0;
                        $(".control-reference").each(function (idx) {
                            if ($(this).val().length == 0) {
                                emptyInputsReference++;
                            }
                        });
                        if ($("#CustomerID").val() == 0) {
                            $(".control-customer-new").each(function (idx) {
                                if ($(this).val().length == 0) {
                                    errorCustomer = true;
                                }
                            });
                        }
                        $(".control-customer").each(function (idx) {
                            if ($(this).val().length == 0) {
                                errorCustomer = true;
                            }
                        });
                        if (emptyInputsReference > 2)
                            errorReference = true;
                        var error = false;

                        if (($("#TownID").val() != null && $("#TownID").val().length == 0) || $("#StateID").val().length == 0) {
                            error = true;
                        }

                        if (!errorBeneficiary && !errorReference && !error && !errorCustomer) {
                            $("#PurchaseRequestCreateForm").submit();
                            checkCookie();
                            AlertMessage("Guardando...");
                        }
                        else
                            if (errorReference)
                                AlertMessage("Debe registrar al menos una referencia, llene todos los campos");
                            else if (errorBeneficiary)
                                AlertMessage("Debe registrar al menos un beneficiario y si agrega uno nuevo llene todos los campos");
                            else if (errorCustomer)
                                AlertMessage("Debe llenar los campos necesarios del Cliente, Nombre, correo electronico y telefono particular");
                            else if (error)
                                AlertMessage("Llene todos los campos")
                    } else {
                        AlertMessage("Ya existe un cliente registrado con el mismo correo");
                    }
                },
                error: function (error) {
                    alert(error);
                }
            });
    });
    function EngancheCorrecto() {
        var suma = 0;
        $('.payment').each(function () {
            if ($(this).val().length>0)
                suma += parseFloat($(this).val());
        });
        console.log(suma + "-" + parseFloat($("#Enganche").val()))
        if (suma != parseFloat($("#Enganche").val())) {
            AlertMessage("El total debe ser $" + $("#Enganche").val())
            return false;
        } else {
            return true;
        }
    }
    $("#btnAddBeneficiary").click(function () {
        if ($(".tr-beneficiary").length < 4) {
            var tr = `<tr class='tr tr-beneficiary'>
                        <td><input type='text' class='form-control control-beneficiary' name='BeneficiaryName' value='' /></td>
                        <td><input type='text' class='form-control control-beneficiary' name='BeneficiarySurnames' value='' /></td>
                        <td><input type='text' class='form-control datepicker control-beneficiary' name='BeneficiaryBirthdate' value='' readonly="readonly" /></td>
                        <td><input type='text' class='form-control control-beneficiary phone' name='BeneficiaryCelPhone' value='' /></td>
                        <td><input type='text' class='form-control control-beneficiary' name='BeneficiaryRelationship' value='' /><input type='hidden' name='BeneficiaryCustomerID' value='0' /></td>
                        <td><button class='btn btn-danger btn-remove-beneficiary' type='button'>-</button></td>
                    </tr>`;

            $("#tableBeneficiary").append(tr);
            $.datepicker.setDefaults($.datepicker.regional['es-MX']);
            $(".datepicker").datepicker({
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,
                dateFormat: 'dd/mm/yy',
                yearRange: "-120:+0",
                maxDate: new Date(),
            });
            $('.phone').mask('(000)-0000000');
        } else {
            AlertMessage("Solo puede registrar 4 beneficiarios.")
        }
    });
    $('#Customer').autocomplete({
        source: function (request, response) {
            $.ajax({
                url: '@Url.Action("acCustomers", "ProspectiveCustomer")',
                dataType: "json",
                data: { term: $('#Customer').val() },
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.value,
                            CustomerID: item.label,
                            Name: item.Name,
                            PSurname: item.PSurname,
                            MSurname: item.MSurname,
                            Customer:item

                        }
                    }));
                },
                error: function (error) {
                    alert(error.responseText);
                }
            });
        },
        select: function (event, ui) {
            $("#Customer").val(ui.item.label);
            $("#CustomerID").val(ui.item.CustomerID);
            $("#Address").val(ui.item.Customer.Address);
            $("#AddressNumber").val(ui.item.Customer.AddressNumber);
            $("#AdressInteriorNumber").val(ui.item.Customer.AdressInteriorNumber);
            $("#Neighborhood").val(ui.item.Customer.Neighborhood);
            $("#ZipCode").val(ui.item.Customer.ZipCode);
            $('#StateID option[value="' + ui.item.Customer.StateID + '"]').attr("selected", true);
            $("#StateID").trigger("change");
            setTimeout(
                function () {
                    $('#TownID option[value="' + ui.item.Customer.TownID + '"]').attr("selected", true);
                }, 1500);
            $("#Delegation").val(ui.item.Customer.Delegation);
            $("#CelPhone").val(ui.item.Customer.CelPhone);
            $("#RFCCURP").val(ui.item.Customer.RFCCURP);
            $("#BusinessName").val(ui.item.Customer.BusinessName)
            $("#Email").val(ui.item.Customer.Email);
            $("#DateOfBirth").val(ui.item.Customer.sDateOfBirth);
            $("#CityOfBirth").val(ui.item.Customer.CityOfBirth);
            $('#CivilStatusID option[value="' + ui.item.Customer.CivilStatusID + '"]').attr("selected", true);
            $("#Occupation").val(ui.item.Customer.Occupation);
            $("#Company").val(ui.item.Customer.Company);
            $("#PhoneCompany").val(ui.item.Customer.PhoneCompany);
            $("#AddressCompany").val(ui.item.Customer.AddressCompany);
            $("#ExtPhoneCompany").val(ui.item.Customer.ExtPhoneCompany);
            $("#AddressCompany").val(ui.item.Customer.AddressCompany);
            $('#StateAddressCompanyID option[value="' + ui.item.Customer.StateAddressCompanyID + '"]').attr("selected", true);
            $("#StateAddressCompanyID").trigger("change");
            setTimeout(
                function () {
                    $('#TownAddressCompanyID option[value="' + ui.item.Customer.TownAddressCompanyID + '"]').attr("selected", true);
                }, 1500);
            $("#DelegationAddressCompany").val(ui.item.Customer.DelegationAddressCompany);
            $("#Income").val(ui.item.Customer.Income);
            console.log(ui.item.Customer);
        }
    });
    $("#SearchCustomer").click(function () {
        $(".tr-search-customer").show();
        $(".tr-new-customer").hide();
    });
    $("#EditNameCustomer").click(function () {
        $(".tr-new-customer").show();
        $(".tr-search-customer").hide();
    });
    $("#NewCustomer").click(function () {
        $(".tr-new-customer").show();
        $(".tr-search-customer").hide();
        $("#CustomerID").val(0)
    });
     $("#StateID").change(function () {
        $("#TownID").html('');
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetByStateID", "Towns")',
            dataType: 'json',
            data: { StateID: $("#StateID").val() },
            success: function (data) {
                $.each(data, function (i, item) {
                    $("#TownID").append('<option value="' + item.TownID + '">' + item.Name + '</option>');
                });
            },
            error: function (ex) {
                alert($("#patient_error").data('error') + ex);
            }
        });
     })
    $("#StateAddressCompanyID").change(function () {
        $("#TownAddressCompanyID").html('');
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetByStateID", "Towns")',
            dataType: 'json',
            data: { StateID: $("#StateAddressCompanyID").val() },
            success: function (data) {
                $.each(data, function (i, item) {
                    $("#TownAddressCompanyID").append('<option value="' + item.TownID + '">' + item.Name + '</option>');
                });
            },
            error: function (ex) {
                alert($("#patient_error").data('error') + ex);
            }
        });
     })
    function checkCookie() {
        var cookieVal = $.cookie($("#windowid").val());
        if (cookieVal == null || cookieVal === 'undefined') {
            setTimeout("checkCookie();", 1000);
        }
        else {
            checkCookieContract();
            if ($("#CryptType").val() == "Individual") {
                location.href = "@Url.Action("ContractCommunityCrypt")?window_contract_id=" + $("#window_contract_id").val();
            }
            else {
                location.href = "@Url.Action("Contract")?window_contract_id=" + $("#window_contract_id").val() + "&sPaymentMethod=" + $("#PaymentMethod").val();
            }
        }
    }
    function checkCookieContract() {
        var cookieVal = $.cookie($("#window_contract_id").val());
        if (cookieVal == null || cookieVal === 'undefined') {
            setTimeout("checkCookieContract();", 5000);
        }
        else {
            location.href = "@Url.Action("Receipt")";

            Swal.fire({
                title: '¿Desea salir de la vista?',
                icon: 'info',
                text: 'Verifique que solicitud y contrato se hayan generado.',
                showDenyButton: true,
                confirmButtonText: 'Si, continuar',
                denyButtonText: 'No,cancelar',
            }).then(function (result) {
                if (result.isConfirmed) {
                    location.href = "@Url.Action("Index","Customers")";
                }
                else {
                    checkCookieContract();
                }
            })
        }
    }
    </script>
}